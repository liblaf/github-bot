name: (Webhook) repository.created

run-name: >-
  ${{ format('{0}: {1}/{2}', github.workflow, inputs.owner || github.event.client_payload.repository.owner.login, inputs.repo || github.event.client_payload.repository.name) }}

on:
  repository_dispatch:
    types:
      - repository.created
  workflow_call:
    inputs:
      owner:
        description: owner
        required: true
        default: liblaf
        type: string
      repo:
        description: repo
        required: true
        type: string
  workflow_dispatch:
    inputs:
      owner:
        description: owner
        required: true
        default: liblaf
        type: string
      repo:
        description: repo
        required: true
        type: string

concurrency:
  group: >-
    ${{ format('{0}: {1}/{2}', github.workflow, inputs.owner || github.event.client_payload.repository.owner.login, inputs.repo || github.event.client_payload.repository.name) }}
  cancel-in-progress: true

jobs:
  pre:
    name: Pre
    permissions:
      actions: write
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{ steps.pre.outputs.should-skip }}
    steps:
      - id: pre
        name: Pre
        uses: liblaf/actions-ts/pre@dist

  inputs:
    name: Inputs
    runs-on: ubuntu-latest
    outputs:
      full-name: ${{ steps.inputs.outputs.full-name }}
      owner: ${{ steps.inputs.outputs.owner }}
      repo: ${{ steps.inputs.outputs.repo }}
    steps:
      - id: inputs
        name: Parse Inputs
        run: |-
          case '${{ github.event_name }}' in
            'repository_dispatch')
              printf 'full-name=%s\n' '${{ github.event.client_payload.repository.full_name }}' >> "$GITHUB_OUTPUT"
              printf 'owner=%s\n' '${{ github.event.client_payload.repository.owner.login }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ github.event.client_payload.repository.name }}' >> "$GITHUB_OUTPUT"
              ;;
            'workflow_call' | 'workflow_dispatch')
              printf 'full-name=%s\n' '${{ inputs.owner }}/${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              printf 'owner=%s\n' '${{ inputs.owner }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo '::error::Unsupported event name: ${{ github.event_name }}'
              ;;
          esac

  actions:
    name: Actions
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - name: Set Default Workflow Permissions
        # ref: <https://docs.github.com/en/rest/actions/permissions#set-default-workflow-permissions-for-a-repository>
        run: >-
          gh api '/repos/${{ needs.inputs.outputs.full-name }}/actions/permissions/workflow'
          --field default_workflow_permissions='read'
          --field can_approve_pull_request_reviews=true
          --method PUT
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  copier:
    name: Copier
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - id: auth
        name: Authenticate
        uses: liblaf/actions-ts/authenticate@dist
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ needs.inputs.outputs.owner }}
          repositories: ${{ needs.inputs.outputs.repo }}
      - id: branches
        name: Get Branches
        run: |-
          n-branches="$(gh api "/repos/${{ needs.inputs.outputs.full-name }}/branches" --jq 'length')"
          printf 'n-branches=%s\n' "$n-branches" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.auth.outputs.token }}
      - if: ${{ steps.branches.outputs.n-branches > 0 }}
        name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ needs.inputs.outputs.full-name }}
          token: ${{ steps.auth.outputs.token }}
      - if: ${{ steps.branches.outputs.n-branches > 0 }}
        name: Copier Update
        uses: liblaf/actions/copier-update@main
      - if: ${{ steps.branches.outputs.n-branches > 0 }}
        name: Commit
        uses: liblaf/actions-ts/commit@main
        with:
          add-options: --verbose --all
          message: "chore(copier): update from template"
          owner: ${{ needs.inputs.outputs.owner }}
          repository: ${{ needs.inputs.outputs.repo }}
          token: ${{ steps.auth.outputs.token }}

  label:
    name: Label
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - id: auth
        name: Authenticate
        uses: liblaf/actions-ts/authenticate@dist
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ needs.inputs.outputs.owner }}
          repositories: ${{ needs.inputs.outputs.repo }}
        # TODO: remove download labels until <https://github.com/Financial-Times/github-label-sync/issues/193> is resolved
      - name: Download Labels
        run: >-
          wget --output-document='labels.yaml'
          'https://raw.githubusercontent.com/${{ needs.inputs.outputs.owner }}/.github/main/.github/labels.yaml'
      - name: GitHub Label Sync
        run: >-
          npx github-label-sync
          --access-token '${{ steps.auth.outputs.token }}'
          --labels 'labels.yaml'
          --allow-added-labels
          '${{ needs.inputs.outputs.full-name }}'

  repo:
    name: Repo
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - name: Edit Repository Setttings
        run: >-
          gh repo edit '${{ needs.inputs.outputs.full-name }}'
          --allow-update-branch
          --delete-branch-on-merge
          --enable-auto-merge
          --enable-discussions
          --enable-issues
          --enable-merge-commit=false
          --enable-rebase-merge=false
          --enable-squash-merge
          --enable-wiki=false
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  ruleset:
    name: Ruleset
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - name: Ruleset Import
        # TODO: switch to gh cli until <https://github.com/cli/cli/issues/8019> is resolved
        uses: liblaf/actions/ruleset-import@main
        with:
          repo: ${{ needs.inputs.outputs.full-name }}
          token: ${{ secrets.GH_PAT }}
          source-repo: ${{ needs.inputs.outputs.owner }}/.github
          source-ruleset-id: 3407904

  secrets:
    name: Secrets
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - name: Create or Update Secrets
        run: |-
          function secret-set() {
            gh secret --repo '${{ needs.inputs.outputs.full-name }}' set "$1" --body "$2"
          }

          secret-set CARGO_REGISTRY_TOKEN '${{ secrets.CARGO_REGISTRY_TOKEN }}'
          secret-set GH_APP_ID '${{ secrets.GH_APP_ID }}'
          secret-set GH_APP_PRIVATE_KEY '${{ secrets.GH_APP_PRIVATE_KEY }}'
          secret-set GH_PAT '${{ secrets.GH_PAT }}'
          secret-set NPM_TOKEN '${{ secrets.NPM_TOKEN }}'
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
