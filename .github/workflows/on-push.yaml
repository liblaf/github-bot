name: (Webhook) push

run-name: >-
  ${{ format('{0}: {1}/{2}@{3}', github.workflow, inputs.owner || github.event.client_payload.repository.owner.login, inputs.repo || github.event.client_payload.repository.name, inputs.ref || github.event.client_payload.ref) }}

on:
  workflow_call:
    inputs:
      owner:
        description: owner
        default: ${{ github.repository_owner }}
        required: false
        type: string
      repo:
        description: repo
        required: true
        type: string
      ref:
        description: ref
        default: refs/heads/main
        required: false
        type: string
  workflow_dispatch:
    inputs:
      owner:
        description: owner
        default: liblaf
        required: false
        type: string
      repo:
        description: repo
        required: true
        type: string
      ref:
        description: ref
        default: refs/heads/main
        required: false
        type: string
  repository_dispatch:
    types:
      - push

jobs:
  inputs:
    name: Inputs
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.inputs.outputs.repository }}
      owner: ${{ steps.inputs.outputs.owner }}
      ref: ${{ steps.inputs.outputs.ref }}
      repo: ${{ steps.inputs.outputs.repo }}
    steps:
      - id: inputs
        name: Parse Inputs
        run: |-
          case '${{ github.event_name }}' in
            'repository_dispatch')
              printf 'owner=%s\n' '${{ github.event.client_payload.repository.owner.login }}' >> "$GITHUB_OUTPUT"
              printf 'ref=%s\n' '${{ github.event.client_payload.ref }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ github.event.client_payload.repository.name }}' >> "$GITHUB_OUTPUT"
              printf 'repository=%s\n' '${{ github.event.client_payload.repository.full_name }}' >> "$GITHUB_OUTPUT"
              ;;
            'workflow_call' | 'workflow_dispatch')
              printf 'owner=%s\n' '${{ inputs.owner }}' >> "$GITHUB_OUTPUT"
              printf 'ref=%s\n' '${{ inputs.ref }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              printf 'repository=%s\n' '${{ inputs.owner }}/${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo '::error::Unsupported event name: ${{ github.event_name }}'
              ;;
          esac

  release-please:
    name: Release Please
    needs:
      - inputs
    if: ${{ needs.inputs.outputs.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    outputs:
      created: ${{ steps.release-please.outputs.release_created }}
      pr: ${{ steps.release-please.outputs.pr }}
      tag: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - id: auth
        name: Authenticate
        uses: liblaf/actions/auth@dist
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ needs.inputs.outputs.owner }}
          repositories: ${{ needs.inputs.outputs.repo }}
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ needs.inputs.outputs.repository }}
          ref: ${{ needs.inputs.outputs.ref }}
          token: ${{ steps.auth.outputs.token }}
      - id: config
        name: Find Config Files
        run: |-
          config_file='.config/release-please/config.json'
          manifest_file='.config/release-please/.manifest.json'
          if [[ -f $config_file ]]; then
            printf 'config-file=%s\n' "$config_file" >> "$GITHUB_OUTPUT"
          fi
          if [[ -f $manifest_file ]]; then
            printf 'manifest-file=%s\n' "$manifest_file" >> "$GITHUB_OUTPUT"
          fi
      - id: release-please
        if: ${{ steps.config.outputs.config-file && steps.config.outputs.manifest-file }}
        name: Release Please
        # TODO: switch back to official `googleapis/release-please-action` until <https://github.com/googleapis/release-please-action/issues/867> is resolved
        # ref: <https://github.com/googleapis/release-please-action/pull/1132#issuecomment-3206113280>
        # > As apparent from [googleapis/release-please#2545](https://github.com/googleapis/release-please/issues/2545) and [#1078](https://github.com/googleapis/release-please-action/issues/1078), this project is not actively maintained (especially the action itself).
        # Maybe I should consider migrating to community maintained alternatives in the future.
        uses: release-please-oss/release-please-action@main
        with:
          token: ${{ steps.auth.outputs.token }}
          config-file: ${{ steps.config.outputs.config-file }}
          manifest-file: ${{ steps.config.outputs.manifest-file }}
          repo-url: ${{ needs.inputs.outputs.repository }}

  changelog-pr:
    name: Changelog (PR)
    needs:
      - inputs
      - release-please
    if: ${{ needs.release-please.outputs.pr }}
    runs-on: ubuntu-latest
    steps:
      - id: auth
        name: Authenticate
        uses: liblaf/actions/auth@dist
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ needs.inputs.outputs.owner }}
          repositories: ${{ needs.inputs.outputs.repo }}
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ needs.inputs.outputs.repository }}
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          token: ${{ steps.auth.outputs.token }}
          fetch-depth: 0
      - id: tag
        name: Get Tag
        run: |-
          title='${{ fromJson(needs.release-please.outputs.pr).title }}'
          version="$(awk '{ print $NF }' <<< "$title")"
          printf 'tag=%s\n' "v$version" >> "$GITHUB_OUTPUT"
      - name: Changelog
        uses: liblaf/actions/changelog@dist
        with:
          output: CHANGELOG.md
          repository: ${{ needs.inputs.outputs.repository }}
          args: --tag '${{ steps.tag.outputs.tag }}'
      - name: Commit
        uses: liblaf/actions/commit@dist
        with:
          add-options: --verbose 'CHANGELOG.md'
          message: "chore(docs): update CHANGELOG.md"
          owner: ${{ needs.inputs.outputs.owner }}
          ref: ${{ fromJson(needs.release-please.outputs.pr).headBranchName }}
          repository: ${{ needs.inputs.outputs.repo }}
          token: ${{ steps.auth.outputs.token }}

  changelog-release:
    name: Changelog (Release)
    needs:
      - inputs
      - release-please
    if: ${{ needs.release-please.outputs.created }}
    runs-on: ubuntu-latest
    steps:
      - id: auth
        name: Authenticate
        uses: liblaf/actions/auth@dist
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ needs.inputs.outputs.owner }}
          repositories: ${{ needs.inputs.outputs.repo }}
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ${{ needs.inputs.outputs.repository }}
          ref: ${{ needs.release-please.outputs.tag }}
          token: ${{ steps.auth.outputs.token }}
          fetch-depth: 0
      - id: changelog
        name: Changelog
        uses: liblaf/actions/changelog@dist
        with:
          repository: ${{ needs.inputs.outputs.repository }}
          args: --current --strip all
      - name: Update Release
        run: >-
          gh release --repo '${{ needs.inputs.outputs.repository }}'
          edit '${{ needs.release-please.outputs.tag }}'
          --notes-file '${{ steps.changelog.outputs.changelog }}'
        env:
          GH_TOKEN: ${{ steps.auth.outputs.token }}
