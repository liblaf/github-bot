name: (Webhook) pull_request

run-name: >-
  ${{ format('{0}: {1}/{2}#{3}', github.workflow, inputs.owner || github.event.client_payload.repository.owner.login, inputs.repo || github.event.client_payload.repository.name, inputs.number || github.event.client_payload.pull_request.number) }}

on:
  workflow_call:
    inputs:
      owner:
        required: true
        type: string
      repo:
        required: true
        type: string
      number:
        required: true
        type: number
  workflow_dispatch:
    inputs:
      owner:
        description: owner
        required: true
        default: liblaf
        type: string
      repo:
        description: repo
        required: true
        type: string
      number:
        description: pull request number
        required: true
        type: number
  repository_dispatch:
    types:
      - pull_request_review.dismissed
      # ref: <https://docs.github.com/en/actions/reference/workflows-and-actions/events-that-trigger-workflows#pull_request>
      - pull_request.opened
      - pull_request.reopened
      - pull_request.synchronize

jobs:
  inputs:
    name: Inputs
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.inputs.outputs.number }}
      owner: ${{ steps.inputs.outputs.owner }}
      repo: ${{ steps.inputs.outputs.repo }}
      repository: ${{ steps.inputs.outputs.repository }}
    steps:
      - id: inputs
        name: Parse Inputs
        run: |-
          case '${{ github.event_name }}' in
            'repository_dispatch')
              printf 'number=%s\n' '${{ github.event.client_payload.number }}' >> "$GITHUB_OUTPUT"
              printf 'owner=%s\n' '${{ github.event.client_payload.repository.owner.login }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ github.event.client_payload.repository.name }}' >> "$GITHUB_OUTPUT"
              printf 'repository=%s\n' '${{ github.event.client_payload.repository.full_name }}' >> "$GITHUB_OUTPUT"
              ;;
            'workflow_call' | 'workflow_dispatch')
              printf 'number=%s\n' '${{ inputs.number }}' >> "$GITHUB_OUTPUT"
              printf 'owner=%s\n' '${{ inputs.owner }}' >> "$GITHUB_OUTPUT"
              printf 'repo=%s\n' '${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              printf 'repository=%s\n' '${{ inputs.owner }}/${{ inputs.repo }}' >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo '::error::Unsupported event name: ${{ github.event_name }}'
              ;;
          esac

  auto-approve:
    name: Auto Approve
    needs:
      - inputs
    runs-on: ubuntu-latest
    steps:
      - name: Auto Approve Renovate
        uses: liblaf/actions/approve@dist
        with:
          authors: renovate[bot]
          pull-number: ${{ needs.inputs.outputs.number }}
          repository: ${{ needs.inputs.outputs.repository }}
          token: ${{ secrets.GH_PAT }}
      - name: Auto Approve Fixes
        uses: liblaf/actions/approve@dist
        with:
          labels: autofix
          pull-number: ${{ needs.inputs.outputs.number }}
          repository: ${{ needs.inputs.outputs.repository }}
          token: ${{ secrets.GH_PAT }}
